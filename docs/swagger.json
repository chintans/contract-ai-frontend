{
  "openapi": "3.0.0",
  "paths": {
    "/api/v1/users": {
      "post": {
        "operationId": "UsersController_create_v1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "get": {
        "operationId": "UsersController_findAll_v1",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "filters",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfinityPaginationUserResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "operationId": "UsersController_findOne_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "patch": {
        "operationId": "UsersController_update_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "operationId": "UsersController_remove_v1",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/files/upload": {
      "post": {
        "operationId": "FilesLocalController_uploadFile_v1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Files"
        ]
      }
    },
    "/api/v1/auth/email/login": {
      "post": {
        "operationId": "AuthController_login_v1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthEmailLoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/v1/auth/email/register": {
      "post": {
        "operationId": "AuthController_register_v1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRegisterLoginDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/v1/auth/email/confirm": {
      "post": {
        "operationId": "AuthController_confirmEmail_v1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthConfirmEmailDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/v1/auth/email/confirm/new": {
      "post": {
        "operationId": "AuthController_confirmNewEmail_v1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthConfirmEmailDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/v1/auth/forgot/password": {
      "post": {
        "operationId": "AuthController_forgotPassword_v1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthForgotPasswordDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/v1/auth/reset/password": {
      "post": {
        "operationId": "AuthController_resetPassword_v1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthResetPasswordDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/v1/auth/me": {
      "get": {
        "operationId": "AuthController_me_v1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Auth"
        ]
      },
      "patch": {
        "operationId": "AuthController_update_v1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Auth"
        ]
      },
      "delete": {
        "operationId": "AuthController_delete_v1",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/v1/auth/refresh": {
      "post": {
        "operationId": "AuthController_refresh_v1",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "operationId": "AuthController_logout_v1",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/v1/auth/facebook/login": {
      "post": {
        "operationId": "AuthFacebookController_login_v1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthFacebookLoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/v1/auth/google/login": {
      "post": {
        "operationId": "AuthGoogleController_login_v1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthGoogleLoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/api/v1/auth/apple/login": {
      "post": {
        "operationId": "AuthAppleController_login_v1",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthAppleLoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/": {
      "get": {
        "operationId": "HomeController_appInfo",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Home"
        ]
      }
    },
    "/api/standard-clauses": {
      "post": {
        "operationId": "StandardClausesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStandardClauseDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The standard clause has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardClauseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Create a new standard clause",
        "tags": [
          "standard-clauses"
        ]
      },
      "get": {
        "operationId": "StandardClausesController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return all standard clauses.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StandardClauseDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get all standard clauses",
        "tags": [
          "standard-clauses"
        ]
      }
    },
    "/api/standard-clauses/{id}": {
      "get": {
        "operationId": "StandardClausesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the standard clause.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardClauseDto"
                }
              }
            }
          },
          "404": {
            "description": "Standard clause not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get a standard clause by id",
        "tags": [
          "standard-clauses"
        ]
      },
      "patch": {
        "operationId": "StandardClausesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStandardClauseDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The standard clause has been successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardClauseDto"
                }
              }
            }
          },
          "404": {
            "description": "Standard clause not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Update a standard clause",
        "tags": [
          "standard-clauses"
        ]
      },
      "delete": {
        "operationId": "StandardClausesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The standard clause has been successfully deleted."
          },
          "404": {
            "description": "Standard clause not found."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Delete a standard clause",
        "tags": [
          "standard-clauses"
        ]
      }
    },
    "/api/standard-clauses/type/{type}": {
      "get": {
        "operationId": "StandardClausesController_findByType",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the standard clauses of specified type.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StandardClauseDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get standard clauses by type",
        "tags": [
          "standard-clauses"
        ]
      }
    },
    "/api/standard-clauses/contract-type/{contractType}": {
      "get": {
        "operationId": "StandardClausesController_findByContractType",
        "parameters": [
          {
            "name": "contractType",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return clauses for the contract type.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StandardClauseDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "summary": "Get standard clauses by contract type",
        "tags": [
          "standard-clauses"
        ]
      }
    },
    "/api/contracts/upload": {
      "post": {
        "operationId": "ContractController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "contractType": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Upload a contract file",
        "tags": [
          "contracts"
        ]
      }
    },
    "/api/contracts": {
      "get": {
        "operationId": "ContractController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return all contracts"
          }
        },
        "summary": "Get all contracts",
        "tags": [
          "contracts"
        ]
      }
    },
    "/api/contracts/{id}": {
      "get": {
        "operationId": "ContractController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The ID of the contract to get",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the contract"
          }
        },
        "summary": "Get a contract by id",
        "tags": [
          "contracts"
        ]
      },
      "patch": {
        "operationId": "ContractController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The ID of the contract to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContractDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contract updated successfully"
          }
        },
        "summary": "Update a contract",
        "tags": [
          "contracts"
        ]
      },
      "delete": {
        "operationId": "ContractController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The ID of the contract to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contract deleted successfully"
          }
        },
        "summary": "Delete a contract",
        "tags": [
          "contracts"
        ]
      }
    },
    "/api/contracts/{id}/analyze": {
      "post": {
        "operationId": "ContractController_analyzeContract",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The ID of the contract to analyze",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contract analysis completed"
          }
        },
        "summary": "Analyze a contract using AI",
        "tags": [
          "contracts"
        ]
      }
    },
    "/api/contracts/{id}/summary": {
      "get": {
        "operationId": "ContractController_getContractSummary",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The ID of the contract to get summary for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return contract summaries"
          }
        },
        "summary": "Get contract summaries",
        "tags": [
          "contracts"
        ]
      }
    },
    "/api/contracts/{id}/risks": {
      "get": {
        "operationId": "ContractController_getContractRisks",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The ID of the contract to get risks for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return contract risks"
          }
        },
        "summary": "Get contract risks",
        "tags": [
          "contracts"
        ]
      }
    },
    "/api/contracts/{id}/analysis": {
      "get": {
        "operationId": "ContractController_getAnalysis",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The ID of the contract to get analysis for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return analysis data"
          }
        },
        "summary": "Get full contract analysis",
        "tags": [
          "contracts"
        ]
      }
    },
    "/api/contracts/{id}/qna": {
      "get": {
        "operationId": "ContractController_getContractQnA",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The ID of the contract to get Q&A for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return contract Q&A"
          }
        },
        "summary": "Get contract Q&A",
        "tags": [
          "contracts"
        ]
      },
      "post": {
        "operationId": "ContractController_askQuestion",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The ID of the contract to ask question for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Question answered successfully"
          }
        },
        "summary": "Ask a question about the contract",
        "tags": [
          "contracts"
        ]
      }
    },
    "/api/contracts/{id}/chat": {
      "post": {
        "operationId": "ContractController_submitChat",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The ID of the contract to submit chat for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Chat answered"
          }
        },
        "summary": "Submit a chat question",
        "tags": [
          "contracts"
        ]
      },
      "get": {
        "operationId": "ContractController_getChat",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The ID of the contract to get chat history for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return chat messages"
          }
        },
        "summary": "Get chat history",
        "tags": [
          "contracts"
        ]
      }
    },
    "/api/contracts/{id}/risk-flags/{riskId}": {
      "patch": {
        "operationId": "ContractController_updateRiskFlag",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The ID of the contract to update risk flag for",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "riskId",
            "required": true,
            "in": "path",
            "description": "The ID of the risk flag to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRiskFlagDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Risk flag updated"
          }
        },
        "summary": "Update risk flag status",
        "tags": [
          "contracts"
        ]
      }
    },
    "/api/contracts/{id}/export": {
      "get": {
        "operationId": "ContractController_exportAnalysis",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The ID of the contract to export",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return analysis export"
          }
        },
        "summary": "Export contract analysis",
        "tags": [
          "contracts"
        ]
      }
    },
    "/api/contracts/{id}/reviews": {
      "get": {
        "operationId": "ContractController_getContractReviews",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The ID of the contract to get reviews for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return contract reviews"
          }
        },
        "summary": "Get contract reviews",
        "tags": [
          "contracts"
        ]
      }
    },
    "/api/contracts/{id}/hybrid-ingest": {
      "post": {
        "operationId": "ContractController_hybridIngest",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The ID of the contract to ingest",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sources": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "contractType": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contract ingested successfully"
          }
        },
        "summary": "Ingest a contract into the hybrid search index",
        "tags": [
          "contracts"
        ]
      }
    },
    "/api/contracts/{id}/hybrid-search": {
      "get": {
        "operationId": "ContractController_hybridSearch",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The ID of the contract to search",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "required": true,
            "in": "query",
            "description": "The search query to find relevant clauses",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the most relevant contract clauses for the query"
          }
        },
        "summary": "Hybrid semantic & vector search for contract clauses",
        "tags": [
          "contracts"
        ]
      }
    },
    "/api/templates": {
      "post": {
        "operationId": "TemplatesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStandardClauseDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Templates"
        ]
      },
      "get": {
        "operationId": "TemplatesController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Templates"
        ]
      }
    },
    "/api/templates/type/{type}": {
      "get": {
        "operationId": "TemplatesController_findByType",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Templates"
        ]
      }
    },
    "/api/templates/jurisdiction/{jurisdiction}": {
      "get": {
        "operationId": "TemplatesController_findByJurisdiction",
        "parameters": [
          {
            "name": "jurisdiction",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Templates"
        ]
      }
    },
    "/api/templates/{id}": {
      "get": {
        "operationId": "TemplatesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Templates"
        ]
      },
      "patch": {
        "operationId": "TemplatesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStandardClauseDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Templates"
        ]
      },
      "delete": {
        "operationId": "TemplatesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Templates"
        ]
      }
    },
    "/api/rules": {
      "get": {
        "operationId": "RulesController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "List rules",
        "tags": [
          "rules"
        ]
      },
      "post": {
        "operationId": "RulesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRuleDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Validation failed. Possible reasons: similarityThreshold and deviationAllowedPct both set, or pattern is not a valid regex.",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 400,
                    "message": [
                      "similarityThreshold and deviationAllowedPct cannot both be set",
                      "pattern must be a valid and safe regular expression",
                      "similarityThreshold must not be greater than 100"
                    ],
                    "error": "Bad Request"
                  }
                }
              }
            }
          }
        },
        "summary": "Create rule",
        "tags": [
          "rules"
        ]
      }
    },
    "/api/rules/{id}": {
      "get": {
        "operationId": "RulesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Rule not found"
          }
        },
        "summary": "Get rule by id",
        "tags": [
          "rules"
        ]
      },
      "patch": {
        "operationId": "RulesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRuleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Validation failed. Possible reasons: similarityThreshold and deviationAllowedPct both set, or pattern is not a valid regex.",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "statusCode": 400,
                    "message": [
                      "similarityThreshold and deviationAllowedPct cannot both be set",
                      "pattern must be a valid and safe regular expression",
                      "similarityThreshold must not be greater than 100"
                    ],
                    "error": "Bad Request"
                  }
                }
              }
            }
          }
        },
        "summary": "Update rule",
        "tags": [
          "rules"
        ]
      },
      "delete": {
        "operationId": "RulesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Delete rule",
        "tags": [
          "rules"
        ]
      }
    },
    "/api/repos": {
      "post": {
        "operationId": "VersionControlController_createRepo",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRepoDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Create repository",
        "tags": [
          "version-control"
        ]
      }
    },
    "/api/repos/{id}/branches": {
      "post": {
        "operationId": "VersionControlController_createBranch",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBranchDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Create branch",
        "tags": [
          "version-control"
        ]
      }
    },
    "/api/repos/{id}/commits": {
      "post": {
        "operationId": "VersionControlController_commit",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommitDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "summary": "Create commit",
        "tags": [
          "version-control"
        ]
      }
    }
  },
  "info": {
    "title": "API",
    "description": "API docs",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "FileDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "RoleDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "object"
          }
        },
        "required": [
          "id"
        ]
      },
      "StatusDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "object"
          }
        },
        "required": [
          "id"
        ]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "test1@example.com"
          },
          "password": {
            "type": "string"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "photo": {
            "$ref": "#/components/schemas/FileDto"
          },
          "role": {
            "$ref": "#/components/schemas/RoleDto"
          },
          "status": {
            "$ref": "#/components/schemas/StatusDto"
          }
        },
        "required": [
          "email",
          "password",
          "firstName",
          "lastName"
        ]
      },
      "FileType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "cbcfa8b8-3a25-4adb-a9c6-e325f0d0f3ae"
          },
          "path": {
            "type": "string",
            "example": "https://example.com/path/to/file.jpg"
          }
        },
        "required": [
          "id",
          "path"
        ]
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string",
            "example": "admin"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "Status": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string",
            "example": "active"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "email": {
            "type": "string",
            "example": "john.doe@example.com"
          },
          "provider": {
            "type": "string",
            "example": "email"
          },
          "socialId": {
            "type": "string",
            "example": "1234567890"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "photo": {
            "$ref": "#/components/schemas/FileType"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "deletedAt": {
            "type": "object"
          }
        },
        "required": [
          "id",
          "email",
          "provider",
          "socialId",
          "firstName",
          "lastName",
          "photo",
          "role",
          "status",
          "createdAt",
          "updatedAt",
          "deletedAt"
        ]
      },
      "InfinityPaginationUserResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "hasNextPage": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "data",
          "hasNextPage"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "test1@example.com"
          },
          "password": {
            "type": "string"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "photo": {
            "$ref": "#/components/schemas/FileDto"
          },
          "role": {
            "$ref": "#/components/schemas/RoleDto"
          },
          "status": {
            "$ref": "#/components/schemas/StatusDto"
          }
        }
      },
      "FileResponseDto": {
        "type": "object",
        "properties": {
          "file": {
            "$ref": "#/components/schemas/FileType"
          }
        },
        "required": [
          "file"
        ]
      },
      "AuthEmailLoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "test1@example.com"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "LoginResponseDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          },
          "tokenExpires": {
            "type": "number"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "required": [
          "token",
          "refreshToken",
          "tokenExpires",
          "user"
        ]
      },
      "AuthRegisterLoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "test1@example.com"
          },
          "password": {
            "type": "string"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          }
        },
        "required": [
          "email",
          "password",
          "firstName",
          "lastName"
        ]
      },
      "AuthConfirmEmailDto": {
        "type": "object",
        "properties": {
          "hash": {
            "type": "string"
          }
        },
        "required": [
          "hash"
        ]
      },
      "AuthForgotPasswordDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "test1@example.com"
          }
        },
        "required": [
          "email"
        ]
      },
      "AuthResetPasswordDto": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          }
        },
        "required": [
          "password",
          "hash"
        ]
      },
      "RefreshResponseDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          },
          "tokenExpires": {
            "type": "number"
          }
        },
        "required": [
          "token",
          "refreshToken",
          "tokenExpires"
        ]
      },
      "AuthUpdateDto": {
        "type": "object",
        "properties": {
          "photo": {
            "$ref": "#/components/schemas/FileDto"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "email": {
            "type": "string",
            "example": "new.email@example.com"
          },
          "password": {
            "type": "string"
          },
          "oldPassword": {
            "type": "string"
          }
        }
      },
      "AuthFacebookLoginDto": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "example": "abc"
          }
        },
        "required": [
          "accessToken"
        ]
      },
      "AuthGoogleLoginDto": {
        "type": "object",
        "properties": {
          "idToken": {
            "type": "string",
            "example": "abc"
          }
        },
        "required": [
          "idToken"
        ]
      },
      "AuthAppleLoginDto": {
        "type": "object",
        "properties": {
          "idToken": {
            "type": "string",
            "example": "abc"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          }
        },
        "required": [
          "idToken"
        ]
      },
      "CreateStandardClauseDto": {
        "type": "object",
        "properties": {}
      },
      "StandardClauseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "contractType": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "jurisdiction": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "allowedDeviations": {
            "type": "number"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "previousVersionId": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "name",
          "type",
          "contractType",
          "text",
          "createdAt",
          "updatedAt"
        ]
      },
      "UpdateStandardClauseDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateContractDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateRiskFlagDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "OPEN",
              "RESOLVED",
              "IGNORED"
            ]
          },
          "notes": {
            "type": "string"
          }
        },
        "required": [
          "status"
        ]
      },
      "CreateRuleDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "pattern": {
            "type": "string"
          },
          "similarityThreshold": {
            "type": "number"
          },
          "deviationAllowedPct": {
            "type": "number"
          }
        },
        "required": [
          "name"
        ]
      },
      "UpdateRuleDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "pattern": {
            "type": "string"
          },
          "similarityThreshold": {
            "type": "number"
          },
          "deviationAllowedPct": {
            "type": "number"
          }
        }
      },
      "CreateRepoDto": {
        "type": "object",
        "properties": {
          "entityType": {
            "type": "string",
            "enum": [
              "contract",
              "template"
            ]
          },
          "entityId": {
            "type": "string"
          }
        },
        "required": [
          "entityType",
          "entityId"
        ]
      },
      "CreateBranchDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "fromCommit": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "CreateCommitDto": {
        "type": "object",
        "properties": {
          "branch": {
            "type": "string"
          },
          "treeSha": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "authorId": {
            "type": "number"
          }
        },
        "required": [
          "branch",
          "treeSha",
          "message",
          "authorId"
        ]
      }
    }
  }
}